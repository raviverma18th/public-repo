<?php
/**
 * GenerateToken Cron Job
 * 
 * @category  Eighteentech
 * @package   Eighteentech_VirtualFoot
 * @author    Eighteentech
 */

namespace Eighteentech\VirtualFoot\Cron;

use Psr\Log\LoggerInterface;
use Eighteentech\VirtualFoot\Model\Config;
use Magento\Framework\App\Config\Storage\WriterInterface;
use Magento\Framework\HTTP\Client\Curl;

class GenerateToken
{
    protected $logger;
    protected $config;
    protected $configWriter;
    protected $curl;

    /**
     * Constructor
     *
     * @param LoggerInterface $logger
     * @param Config $config
     * @param WriterInterface $configWriter
     * @param Curl $curl
     */
    public function __construct(
        LoggerInterface $logger,
        Config $config,
        WriterInterface $configWriter,
        Curl $curl
    ) {
        $this->logger = $logger;
        $this->config = $config;
        $this->configWriter = $configWriter;
        $this->curl = $curl;
    }

    /**
     * Execute the cron job to generate token
     */
    public function execute()
    {
        $clientId = $this->config->getAuthenticationsConfig('client_id');
        $clientSecret = $this->config->getAuthenticationsConfig('client_secret');
        $tokenUrl = $this->config->getAuthenticationsConfig('token_url');

        $authHeader = base64_encode($clientId . ':' . $clientSecret);
        $headers = [
            'Content-Type' => 'application/x-www-form-urlencoded',
            'Authorization' => 'Basic ' . $authHeader
        ];

        $postData = 'grant_type=client_credentials&client_id=' . $clientId;

        $this->curl->setHeaders($headers);
        $this->curl->post($tokenUrl, $postData);
        $response = json_decode($this->curl->getBody(), true);

        if (isset($response['access_token'])) {
            $this->configWriter->save('virtualfoot/authentications/autogenerated_token', $response['access_token']);
            $this->logger->info('Token generated successfully.');
        } else {
            $this->logger->error('Failed to generate token.');
        }
    }
}